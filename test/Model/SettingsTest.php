<?php
/**
 * SettingsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AzuraCast
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AzuraCast
 *
 * AzuraCast is a standalone, turnkey web radio management tool. Radio stations hosted by AzuraCast expose a public API for viewing now playing data, making requests and more.
 *
 * The version of the OpenAPI document: 0.20.2
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AzuraCast\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SettingsTest Class Doc Comment
 *
 * @category    Class
 * @description Settings
 * @package     AzuraCast
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SettingsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Settings"
     */
    public function testSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "appUniqueIdentifier"
     */
    public function testPropertyAppUniqueIdentifier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "baseUrl"
     */
    public function testPropertyBaseUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instanceName"
     */
    public function testPropertyInstanceName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "preferBrowserUrl"
     */
    public function testPropertyPreferBrowserUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "useRadioProxy"
     */
    public function testPropertyUseRadioProxy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "historyKeepDays"
     */
    public function testPropertyHistoryKeepDays()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "alwaysUseSsl"
     */
    public function testPropertyAlwaysUseSsl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "apiAccessControl"
     */
    public function testPropertyApiAccessControl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enableStaticNowplaying"
     */
    public function testPropertyEnableStaticNowplaying()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "analytics"
     */
    public function testPropertyAnalytics()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "checkForUpdates"
     */
    public function testPropertyCheckForUpdates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updateResults"
     */
    public function testPropertyUpdateResults()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updateLastRun"
     */
    public function testPropertyUpdateLastRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publicTheme"
     */
    public function testPropertyPublicTheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hideAlbumArt"
     */
    public function testPropertyHideAlbumArt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "homepageRedirectUrl"
     */
    public function testPropertyHomepageRedirectUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultAlbumArtUrl"
     */
    public function testPropertyDefaultAlbumArtUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "useExternalAlbumArtWhenProcessingMedia"
     */
    public function testPropertyUseExternalAlbumArtWhenProcessingMedia()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "useExternalAlbumArtInApis"
     */
    public function testPropertyUseExternalAlbumArtInApis()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lastFmApiKey"
     */
    public function testPropertyLastFmApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hideProductName"
     */
    public function testPropertyHideProductName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publicCustomCss"
     */
    public function testPropertyPublicCustomCss()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publicCustomJs"
     */
    public function testPropertyPublicCustomJs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "internalCustomCss"
     */
    public function testPropertyInternalCustomCss()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupEnabled"
     */
    public function testPropertyBackupEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupTimeCode"
     */
    public function testPropertyBackupTimeCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupExcludeMedia"
     */
    public function testPropertyBackupExcludeMedia()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupKeepCopies"
     */
    public function testPropertyBackupKeepCopies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupStorageLocation"
     */
    public function testPropertyBackupStorageLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupFormat"
     */
    public function testPropertyBackupFormat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupLastRun"
     */
    public function testPropertyBackupLastRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backupLastOutput"
     */
    public function testPropertyBackupLastOutput()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "setupCompleteTime"
     */
    public function testPropertySetupCompleteTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "syncDisabled"
     */
    public function testPropertySyncDisabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "syncLastRun"
     */
    public function testPropertySyncLastRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "externalIp"
     */
    public function testPropertyExternalIp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "geoliteLicenseKey"
     */
    public function testPropertyGeoliteLicenseKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "geoliteLastRun"
     */
    public function testPropertyGeoliteLastRun()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enableAdvancedFeatures"
     */
    public function testPropertyEnableAdvancedFeatures()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailEnabled"
     */
    public function testPropertyMailEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSenderName"
     */
    public function testPropertyMailSenderName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSenderEmail"
     */
    public function testPropertyMailSenderEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSmtpHost"
     */
    public function testPropertyMailSmtpHost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSmtpPort"
     */
    public function testPropertyMailSmtpPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSmtpUsername"
     */
    public function testPropertyMailSmtpUsername()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSmtpPassword"
     */
    public function testPropertyMailSmtpPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailSmtpSecure"
     */
    public function testPropertyMailSmtpSecure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "avatarService"
     */
    public function testPropertyAvatarService()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "avatarDefaultUrl"
     */
    public function testPropertyAvatarDefaultUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "acmeEmail"
     */
    public function testPropertyAcmeEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "acmeDomains"
     */
    public function testPropertyAcmeDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ipSource"
     */
    public function testPropertyIpSource()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
