<?php
/**
 * ApiAdminStorageLocationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AzuraCast
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * AzuraCast
 *
 * AzuraCast is a standalone, turnkey web radio management tool. Radio stations hosted by AzuraCast expose a public API for viewing now playing data, making requests and more.
 *
 * The version of the OpenAPI document: 0.20.2
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AzuraCast\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ApiAdminStorageLocationTest Class Doc Comment
 *
 * @category    Class
 * @description ApiAdminStorageLocation
 * @package     AzuraCast
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ApiAdminStorageLocationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ApiAdminStorageLocation"
     */
    public function testApiAdminStorageLocation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "links"
     */
    public function testPropertyLinks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adapter"
     */
    public function testPropertyAdapter()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "path"
     */
    public function testPropertyPath()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3CredentialKey"
     */
    public function testPropertyS3CredentialKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3CredentialSecret"
     */
    public function testPropertyS3CredentialSecret()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3Region"
     */
    public function testPropertyS3Region()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3Version"
     */
    public function testPropertyS3Version()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3Bucket"
     */
    public function testPropertyS3Bucket()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "s3Endpoint"
     */
    public function testPropertyS3Endpoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dropboxAppKey"
     */
    public function testPropertyDropboxAppKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dropboxAppSecret"
     */
    public function testPropertyDropboxAppSecret()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dropboxAuthToken"
     */
    public function testPropertyDropboxAuthToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpHost"
     */
    public function testPropertySftpHost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpUsername"
     */
    public function testPropertySftpUsername()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpPassword"
     */
    public function testPropertySftpPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpPort"
     */
    public function testPropertySftpPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpPrivateKey"
     */
    public function testPropertySftpPrivateKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sftpPrivateKeyPassPhrase"
     */
    public function testPropertySftpPrivateKeyPassPhrase()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageQuota"
     */
    public function testPropertyStorageQuota()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageQuotaBytes"
     */
    public function testPropertyStorageQuotaBytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageUsed"
     */
    public function testPropertyStorageUsed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageUsedBytes"
     */
    public function testPropertyStorageUsedBytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageAvailable"
     */
    public function testPropertyStorageAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageAvailableBytes"
     */
    public function testPropertyStorageAvailableBytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageUsedPercent"
     */
    public function testPropertyStorageUsedPercent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "isFull"
     */
    public function testPropertyIsFull()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uri"
     */
    public function testPropertyUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stations"
     */
    public function testPropertyStations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
